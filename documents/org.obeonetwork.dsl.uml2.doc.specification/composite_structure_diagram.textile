h1. Composite structure diagram

h2. Sources

* "www.uml-diagrams":http://www.uml-diagrams.org/composite-structure-diagrams.html
* "Superstructure":http://www.omg.org/spec/UML/2.4.1/Superstructure/PDF

The composite structure diagram could be used to show:

* internal structure of a classifier - internal structure diagram
* -a behavior of a collaboration - collaboration use diagram- (We bypass it for now)

This internal structure diagram deals with connections and compositions about Structured Classifier (principally Class and Component types).
The root diagram element could be a Package, Class or Component and displays two levels of hierarchy. (We use a separate layer for each level)
This restriction of two levels is related to:
* the mapping complexity (connector edge mapping)
* the unsynchronized mapping strategy (Drop a huge package hierarchy...)

h2. Mappings

h4. Domain Class for Node/Container mapping:

* uml.PackageableElement (diagram root)
* uml.Interface (Interface Provided/Required)
* uml.StructuredClassifier
* uml.Property

h4. Domain Class for Edge mapping :

* uml.Connector
* uml.InterfaceRealization (edge Port to interface provided)
* uml.Usage (edge Port to interface required)

h4. We have a specific Node/Edge mapping for each level to manage easily all connection abilities:

* Provided/Required Interface -> Required/Provided Interface
* Property -> Property
* Sub Provided/Required Interface -> Port
* Sub Provided/Required Interface -> Sub Required/Provided Interface

h4. A port can provide/require an interface:

In this diagram, we find this provided/required interface with the *Port* type.
For a type A (class) we find :
* all *provided interface* with Interface realizations
* all *required interface* with Usages

With dedicated tools, we can add/remove provided/required interfaces on a Port.
It means that we edit Interface realizations and Usages.
In this diagram, we manage all available interfaces but we cannot create a new interface.  

h4. Property:

A *Part* is a property which is contained by a classifier using composition.
